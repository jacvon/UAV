# Generated by Django 2.2.5 on 2020-06-18 10:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OfflineMapManage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addTime', models.DateTimeField(blank=True, null=True, verbose_name='创建时间')),
                ('mapNickName', models.CharField(max_length=100, verbose_name='路线简称')),
                ('mapDescription', models.TextField(blank=True, null=True, verbose_name='描述')),
            ],
            options={
                'verbose_name': '路线',
                'verbose_name_plural': '路线管理',
            },
        ),
        migrations.CreateModel(
            name='OfflinePreprocessSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addTime', models.DateTimeField(blank=True, verbose_name='创建时间')),
                ('setNickName', models.CharField(max_length=100, verbose_name='配置简称')),
                ('is_brightness', models.BooleanField(blank=True, default=True, max_length=2, verbose_name='亮度均衡')),
                ('is_dehaze', models.BooleanField(blank=True, default=False, max_length=2, verbose_name='去雾')),
                ('is_gamma', models.BooleanField(blank=True, default=True, max_length=2, verbose_name='亮度优化')),
                ('is_clahe', models.BooleanField(blank=True, default=True, max_length=2, verbose_name='对比度增强')),
            ],
            options={
                'verbose_name': '离线任务预处理',
                'verbose_name_plural': '预处理配置',
            },
        ),
        migrations.CreateModel(
            name='SingleImageCompareInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titleId', models.IntegerField(default=None)),
                ('is_compare', models.BooleanField(default=False)),
                ('is_show', models.BooleanField(default=False)),
                ('progress', models.FloatField(default='0', max_length=10, verbose_name='')),
                ('imagePreprocessPath', models.CharField(max_length=1000, verbose_name='')),
                ('imageComOriginPartPath', models.CharField(max_length=1000, verbose_name='')),
                ('imageComOriginPanoPath', models.CharField(max_length=1000, verbose_name='')),
                ('imageComOriginResultPath', models.CharField(max_length=1000, verbose_name='')),
                ('overDate', models.CharField(max_length=45, verbose_name='')),
            ],
            options={
                'verbose_name': '图片比对信息',
                'verbose_name_plural': '图片比对信息',
            },
        ),
        migrations.CreateModel(
            name='SingleImageIdentifyInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titleId', models.IntegerField(default=None)),
                ('is_confirm', models.BooleanField()),
                ('is_identify', models.BooleanField(default=False)),
                ('is_show', models.BooleanField(default=False)),
                ('progress', models.FloatField(default='0', max_length=10, verbose_name='')),
                ('imagePreprocessPath', models.CharField(max_length=1000, verbose_name='')),
                ('imageIdentifyPath', models.CharField(max_length=1000, verbose_name='')),
                ('imageIdentifyResultPath', models.CharField(max_length=1000, verbose_name='')),
                ('overDate', models.CharField(max_length=45, verbose_name='')),
            ],
            options={
                'verbose_name': '图片识别信息',
                'verbose_name_plural': '图片识别信息',
            },
        ),
        migrations.CreateModel(
            name='SingleImagePreprocessInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titleId', models.IntegerField(default=None)),
                ('is_preprocess', models.BooleanField(default=False)),
                ('is_show', models.BooleanField(default=False)),
                ('imageOriginPath', models.CharField(max_length=10000, verbose_name='')),
                ('imagePreprocessPath', models.CharField(max_length=10000, verbose_name='')),
                ('overDate', models.CharField(max_length=45, verbose_name='')),
                ('progress', models.FloatField(default='0', max_length=10, verbose_name='')),
            ],
            options={
                'verbose_name': '图片预处理信息',
                'verbose_name_plural': '图片预处理信息',
            },
        ),
        migrations.CreateModel(
            name='SingleImageSpliceInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titleId', models.IntegerField(default=None)),
                ('is_splice', models.BooleanField(default=False)),
                ('is_show', models.BooleanField(default=False)),
                ('progress', models.FloatField(default='0', max_length=10, verbose_name='')),
                ('imagePreprocessPath', models.CharField(max_length=1000, verbose_name='')),
                ('imageSplicePath', models.CharField(max_length=1000, verbose_name='')),
                ('gpsCsvPath', models.CharField(default='', max_length=1000)),
                ('overDate', models.CharField(max_length=45, verbose_name='')),
            ],
            options={
                'verbose_name': '图片拼接信息',
                'verbose_name_plural': '图片拼接信息',
            },
        ),
        migrations.CreateModel(
            name='OfflineTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('end', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('creator', models.CharField(blank=True, max_length=20, null=True, verbose_name='creator')),
                ('modifier', models.CharField(blank=True, max_length=20, null=True, verbose_name='modifier')),
                ('creation', models.DateTimeField(auto_now_add=True, null=True, verbose_name='creation')),
                ('modification', models.DateTimeField(auto_now=True, null=True, verbose_name='modification')),
                ('description', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('identify_status', models.CharField(blank=True, choices=[('u', '未识别'), ('d', '已确认'), ('p', '正在确认')], default='u', max_length=6, null=True, verbose_name='识别状态')),
                ('splice_status', models.CharField(blank=True, choices=[('u', '未拼接'), ('d', '已完成'), ('p', '正在拼接')], default='u', max_length=6, null=True, verbose_name='拼接状态')),
                ('preprocess_status', models.CharField(blank=True, choices=[('u', '未处理'), ('d', '已完成'), ('p', '正在预处理')], default='u', max_length=6, null=True, verbose_name='预处理状态')),
                ('comparison_status', models.CharField(blank=True, choices=[('u', '未比对'), ('d', '已完成'), ('p', '正在比对')], default='u', max_length=6, null=True, verbose_name='比对状态')),
                ('folderOriginPath', models.CharField(max_length=100, verbose_name='')),
                ('overDate', models.CharField(max_length=45, verbose_name='')),
                ('isIdentify', models.BooleanField(blank=True, default=True, max_length=2, verbose_name='是否识别')),
                ('isIdentifyPre', models.BooleanField(blank=True, default=True, max_length=2, verbose_name='识别是否预处理')),
                ('isSplice', models.BooleanField(blank=True, default=True, max_length=2, verbose_name='是否拼接')),
                ('isSplicePre', models.BooleanField(blank=True, default=True, max_length=2, verbose_name='拼接是否预处理')),
                ('isCompare', models.BooleanField(blank=True, default=True, max_length=2, verbose_name='是否比对')),
                ('isComparePre', models.BooleanField(blank=True, default=True, max_length=2, verbose_name='比对是否预处理')),
                ('comparePath', models.ForeignKey(blank=True, help_text='请选择任务', null=True, on_delete=django.db.models.deletion.CASCADE, to='offlineTask.SingleImageSpliceInfo', verbose_name='比对源文件')),
                ('preprocessSet', models.ForeignKey(help_text='请选择配置', on_delete=django.db.models.deletion.CASCADE, to='offlineTask.OfflinePreprocessSet', verbose_name='预处理配置选择')),
                ('title', models.ForeignKey(help_text='请选择路线', on_delete=django.db.models.deletion.CASCADE, to='offlineTask.OfflineMapManage', verbose_name='路线选择')),
            ],
            options={
                'verbose_name': '离线任务',
                'verbose_name_plural': '离线任务',
            },
        ),
    ]
